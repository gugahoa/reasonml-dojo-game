# generated by ./configure -prefix /io/vendor/ocaml -cc gcc -fPIC -aspp gcc -c -fPIC -no-ocamldoc -no-ocamlbuild -no-curses -no-graph
PREFIX=/io/vendor/ocaml
BINDIR=$(PREFIX)/bin
LIBDIR=$(PREFIX)/lib/ocaml
STUBLIBDIR=$(LIBDIR)/stublibs
MANDIR=$(PREFIX)/man
MANEXT=1
RANLIB=ranlib
RANLIBCMD=ranlib
ARCMD=ar
SHARPBANGSCRIPTS=true
UNIX_OR_WIN32=unix
UNIXLIB=unix
GRAPHLIB=graph
BNG_ARCH=amd64
BNG_ASM_LEVEL=1
PTHREAD_LINK=-lpthread
PTHREAD_CAML_LINK=-cclib -lpthread
X11_INCLUDES=not found
X11_LINK=not found
LIBBFD_LINK=
BYTECC=gcc -fPIC
BYTECCCOMPOPTS=-O -fno-defer-pop -Wall -D_FILE_OFFSET_BITS=64 -D_REENTRANT
BYTECCLINKOPTS= -Wl,-E
BYTECCLIBS= -lm  -ldl  -lpthread
BYTECCRPATH=-Wl,-rpath,
EXE=
SUPPORTS_SHARED_LIBRARIES=true
SHAREDCCCOMPOPTS=-O -fPIC
MKSHAREDLIBRPATH=-Wl,-rpath,
NATDYNLINKOPTS=-Wl,-E
SYSLIB=-l$(1)
#ml let syslib x = "-l"^x;;

### How to build a static library
MKLIB=ar rc $(1) $(2); ranlib $(1)
#ml let mklib out files opts = Printf.sprintf "ar rc %s %s %s; ranlib %s" out opts files out;;
ARCH=amd64
MODEL=default
SYSTEM=linux
NATIVECC=gcc -fPIC
NATIVECCCOMPOPTS=-O -Wall -D_FILE_OFFSET_BITS=64 -D_REENTRANT
NATIVECCPROFOPTS=-O -Wall -D_FILE_OFFSET_BITS=64 -D_REENTRANT
NATIVECCLINKOPTS=
NATIVECCRPATH=-Wl,-rpath,
NATIVECCLIBS= -lm  -ldl
ASM=as
ASPP=gcc -c -fPIC
ASPPPROFFLAGS=-DPROFILING
PROFILING=prof
DYNLINKOPTS= -ldl
OTHERLIBRARIES=unix str num dynlink bigarray systhreads threads
CC_PROFILE=-pg
SYSTHREAD_SUPPORT=true
PARTIALLD=ld -r
PACKLD=$(PARTIALLD) $(NATIVECCLINKOPTS) -o\ 
DLLCCCOMPOPTS=
IFLEXDIR=
O=o
A=a
SO=so
EXT_OBJ=.o
EXT_ASM=.s
EXT_LIB=.a
EXT_DLL=.so
EXTRALIBS=
CCOMPTYPE=cc
TOOLCHAIN=cc
NATDYNLINK=true
CMXS=cmxs
MKEXE=$(BYTECC)
MKEXEDEBUGFLAG=-g
MKDLL=gcc -fPIC -shared
MKMAINDLL=gcc -fPIC -shared
RUNTIMED=noruntimed
SHARED=shared
WITH_DEBUGGER=ocamldebugger
WITH_OCAMLDOC=
WITH_OCAMLBUILD=
ASM_CFI_SUPPORTED=true
WITH_FRAME_POINTERS=false
TARGET=x86_64-unknown-linux-gnu
HOST=x86_64-unknown-linux-gnu
